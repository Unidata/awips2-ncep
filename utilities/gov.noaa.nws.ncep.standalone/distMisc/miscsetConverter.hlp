*******************************************************************************
                               Convert miscset.tbl
*******************************************************************************

PURPOSE

  MiscsetConvert ... Converts legacy NMAP2 "miscellaneous" data source settings
                     table miscset.tbl into equivalent files for use by the AWIPS II
                     National Centers Perspective (NCP).
                     
                     
INPUT PARAMETERS

  java -jar MiscsetConvert.jar input_filename output_directory
  or
  <converterDir>/bin/miscset2new input_filename output_directory

  MiscsetConvert       Program name.
  input_filename       Legacy miscset.tbl to be converted.
                       May be referenced using an environment variable, for
                       example:  $GEMTBL/config/miscset.tbl
  output_directory     Root directory into which output files are to be written.
                       May be referenced using an environment variable.
                       The directory must exist and be writable by the user.
                       A "MISC" subdirectory tree will be created under this
                       directory (if it does not already exist) in order to
                       match the structure of resource attribute files as
                       required by the new system.  Individual attribute (.attr)
                       files will be written to the various subdirectories.
                       
                       
PROGRAM DESCRIPTION

  MiscsetConvert is one of a suite of standalone tools provided to facilitate
  migration of existing site-, desk-, and/or user-specific preference settings
  from the legacy NMAP2 environment to the new AWIPS II National Centers
  Perspective (NCP).

  MiscsetConvert specifically reads a legacy miscset.tbl file -- which
  contains a table of settings for the various MISC data types -- and
  converts the information into resource attribute (*.attr) files,
  which go under the .../resources/resourceDefns/MISC/*/... directory
  tree for a given localization level.

USAGE NOTES

  Typically, a site administrator and/or individual user(s) would run this
  utility once for each existing customized version of the MISC data source
  settings (miscset) table.
  
  After running the program, all of the output files from that run should
  be copied from the output_directory subdirectories into the corresponding
  subdirectories:
    .../resources/resourceDefns/MISC/...
  ...for the specific localization level (site, desk, user) being migrated.
  
EXAMPLE

java -jar MiscsetConvert.jar $GEMTBL/config/miscset.tbl $HOME/miscset

    - The program ingests the input miscset.tbl file, and produces
      output *.attr files under directories:
      $HOME/miscset/MISC/AIRMET
      $HOME/miscset/MISC/ATCF
      $HOME/miscset/MISC/CSIG
      $HOME/miscset/MISC/FFA
      $HOME/miscset/MISC/ISIG
      $HOME/miscset/MISC/LTNG
      $HOME/miscset/MISC/NCON
      $HOME/miscset/MISC/SCAT
      $HOME/miscset/MISC/SCAT/ASCT
      $HOME/miscset/MISC/SCAT/EXASCT
      $HOME/miscset/MISC/SCAT/QSCT
      $HOME/miscset/MISC/SCAT/WSAT
      $HOME/miscset/MISC/SVRL
      $HOME/miscset/MISC/WARN
      $HOME/miscset/MISC/WCN
      $HOME/miscset/MISC/WCP
      $HOME/miscset/MISC/WOU
      $HOME/miscset/MISC/WSTM
      
      
CONVERSION NOTES

  1.  Legacy table content

  The legacy MISC data source settings (miscset.tbl) table is a
  user-customizable ASCII text file which specifies adjustable
  settings and their default values for each of the data sources
  listed under the MISC group.
  
  In the legacy table, each ALIAS key specifies the name of a MISC
  data source, which must also be defined in the table of known data
  types, datatype.tbl.
  
  Under each ALIAS key, a series of FLAG and/or TYPE lines describe
  boolean and more general (respectively) settings available for
  that data type.  TYPE lines may have subsidiary ARRW, LINE, SYM1,
  and/or SYM2 lines.  (The miscset.tbl file header explains these
  in detail.)
  
  A key point for conversion is that while the ALIAS entries are
  distinguished by the name given in the table, this is not the
  case for the FLAG and TYPE entries underneath them.  Even though
  each FLAG or TYPE entry has a "name" string, the meaning of
  each is known to the legacy system by its order among the other
  FLAG or TYPE entries; that is, the legacy system has hard-coded
  knowledge of which FLAG entries and which TYPE entries appear
  in which sequence.

  2.  AWIPS II NCP resource attribute files
  
  The equivalent information in the new system is captured in
  resource attribute (*.attr) files which define attribute values
  in terms of variables whose name and meaning is known to the
  system.
  
  The converter knows the format and default content of each of
  these attribute files for the MISC data sources ("resources" in
  AWIPS II), including comment lines as delivered with the base
  system.
  
  The converter also knows which new attribute files are associated
  with which legacy data type "ALIAS" names, and, for each resource
  attribute which has an equivalent setting in the legacy system,
  which (sequential) FLAG or TYPE in the legacy table provides the
  equivalent setting value, and (if necessary) how to convert the
  legacy value to an equivalent in the new system.
  
  So, the converter will generate a fixed set of *.attr files,
  in fixed subdirectory locations in the output MISC tree.  The
  content (variable definitions, and comments and blank lines)
  of each *.attr file is also fixed, EXCEPT that IF the legacy
  miscset.tbl supplies a value whose converted equivalent value
  differs from the known default, then that custom value will
  override the default value in the generated *.attr file.

  When such an override occurs, an informational message similar
  to the following appears...
  
    [INFO:  Variable 'outlookLineWidth' value '2' replaced by '3' based on legacy TYPE entry]
    
  ...as confirmation to the user.
  
