package gov.noaa.nws.ncep.ui.nsharp.natives;

import com.sun.jna.Structure;
/**
 * <i>native declaration : line 1</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class _lplvalues extends Structure {
	/// C type : char[40]
	public byte[] desc = new byte[(40)];
	public float pres;
	public float temp;
	public float dwpt;
	public short flag;
	public  _lplvalues() {
		super();
	}
	/// @param desc C type : char[40]
	public  _lplvalues(byte desc[], float pres, float temp, float dwpt, short flag) {
		super();
		if (desc.length != this.desc.length) 
			throw new java.lang.IllegalArgumentException("Wrong array size !");
		this.desc = desc;
		this.pres = pres;
		this.temp = temp;
		this.dwpt = dwpt;
		this.flag = flag;
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected _lplvalues newInstance() { return new _lplvalues(); }
	public static class ByReference extends _lplvalues implements Structure.ByReference {
		
	}
	public static class ByValue extends _lplvalues implements Structure.ByValue {
		
	}
}