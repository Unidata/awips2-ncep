//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.01.06 at 10:38:37 AM EST 
//


package gov.noaa.nws.ncep.ui.pgen.producttypes;

import gov.noaa.nws.ncep.ui.pgen.PgenStaticDataProvider;
import gov.noaa.nws.ncep.ui.pgen.PgenUtil;
import gov.noaa.nws.ncep.ui.pgen.elements.Product;
import gov.noaa.nws.ncep.ui.pgen.file.ProductConverter;

import java.io.File;
import java.io.StringReader;
import java.io.StringWriter;
import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.Marshaller;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.transform.OutputKeys;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import javax.xml.transform.stream.StreamSource;

import org.w3c.dom.Document;

import com.raytheon.uf.common.localization.LocalizationFile;
import com.raytheon.uf.common.serialization.SerializationUtil;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="Name" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="StyleSheetFile" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="OutputFile" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "")
@XmlRootElement(name = "ProdType")
public class ProdType {

    @XmlAttribute(name = "Type")
    protected String type;
    @XmlAttribute(name = "Name")
    protected String name;
    @XmlAttribute(name = "StyleSheetFile")
    protected String styleSheetFile;
    @XmlAttribute(name = "OutputFile")
    protected String outputFile;

    /**
     * Gets the value of the type property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getType() {
        return type;
    }

    /**
     * Sets the value of the type property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setType(String value) {
        this.type = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the styleSheetFile property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getStyleSheetFile() {
        return styleSheetFile;
    }

    /**
     * Sets the value of the styleSheetFile property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setStyleSheetFile(String value) {
        this.styleSheetFile = value;
    }

    /**
     * Gets the value of the outputFile property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getOutputFile() {
        return outputFile;
    }

    /**
     * Sets the value of the outputFile property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOutputFile(String value) {
        this.outputFile = value;
    }
    
    /**
     * Generate text from the input PGEN product according to the Prod Type
     * @param prd
     * @return
     */
    public String generateProd( Product prd){
    	
    	List<Product> lp = new ArrayList<Product>();
    	lp.add(prd);
    	
        String ret ="";
        
    	Document sw = null;
    	
    	try{
    		DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
    		dbf.setNamespaceAware(true);
    		DocumentBuilder db = dbf.newDocumentBuilder();
    		sw = db.newDocument();
    		Marshaller mar =  SerializationUtil.getJaxbContext().createMarshaller();
    		mar.marshal( ProductConverter.convert( lp ), sw );
    	}catch(Exception e){
    		e.printStackTrace();
    	}

    	if ( this.type.equalsIgnoreCase("Text Prod") ){
    		DOMSource ds = new DOMSource(sw);
    		ret = PgenUtil.applyStyleSheet( ds, getStyleSheetFilePath());
    	}
    	else if (this.type.equalsIgnoreCase("KML") ){
    		DOMSource ds = new DOMSource(sw);
    		ret = formatXML(PgenUtil.applyStyleSheet( ds, getStyleSheetFilePath()));
    	}
    	else if ( this.type.equalsIgnoreCase("XML")){
    		ret = getStringFromDoc( sw );
    	}
    	
    	return ret;
    	
    }

    /**
     * Format the input XML document.
     * @param doc
     * @return
     */
    private String getStringFromDoc(org.w3c.dom.Document doc)    {
        try{
           DOMSource domSource = new DOMSource(doc);
           StringWriter writer = new StringWriter();
           StreamResult result = new StreamResult(writer);
           TransformerFactory tf = TransformerFactory.newInstance();
           Transformer transformer = tf.newTransformer();
           
           transformer.setOutputProperty(OutputKeys.INDENT, "yes");
           transformer.setOutputProperty("{http://xml.apache.org/xslt}indent-amount", "3");

           transformer.transform(domSource, result);
           writer.flush();
           return writer.toString();
        }
        catch(Exception ex)
        {
           ex.printStackTrace();
           return null;
        }
    }
    
    private String formatXML( String xmlStr ){
    	StreamSource is = new StreamSource(new StringReader(xmlStr)); 
        try{
           
            StringWriter writer = new StringWriter();
            StreamResult result = new StreamResult(writer);
            TransformerFactory tf = TransformerFactory.newInstance();
            Transformer transformer = tf.newTransformer();
            
            transformer.setOutputProperty(OutputKeys.INDENT, "yes");
            transformer.setOutputProperty("{http://xml.apache.org/xslt}indent-amount", "3");

            transformer.transform(is, result);
            writer.flush();
            return writer.toString();
         }
         catch(Exception ex)
         {
            ex.printStackTrace();
            return "";
         }
    }
    
    private String getStyleSheetFilePath(){
    	String ret = "";
    	try {
			
			LocalizationFile lFile = PgenStaticDataProvider.getProvider().getStaticLocalizationFile(getStyleSheetFileName(styleSheetFile) );
			
			ret =  lFile.getFile().getAbsolutePath();
		}
		catch ( Exception e ){
			e.printStackTrace();
		}
		
		return ret;
    }
    
	private String getStyleSheetFileName( String fname ){
		String ret = "";
		if ( fname == null || fname.isEmpty() ) return ret;
		
		return PgenStaticDataProvider.getProvider().getPgenLocalizationRoot() + File.separator + "xslt" + File.separator + "prod" + File.separator + fname;
	}	

	
}
